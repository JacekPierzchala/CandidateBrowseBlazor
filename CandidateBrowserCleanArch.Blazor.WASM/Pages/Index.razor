@inject DialogService DialogService
@page "/"
@attribute [Authorize(Policy = PermissionStatics.CandidateRead)]

<div class="container mt-1">
    @if (IsLoadDataChanged)
    {
        <RadzenButton Text="Show filters" Icon="@(IsFiltered?"filter_list":"filter_list_off")" ButtonStyle="ButtonStyle.Primary"
                  Click="OpenOrder"/>
    }
    <CandidatesList LoadDataChanged="OnLoadDataChanged"/>

</div>

@code
{
    bool IsLoadDataChanged;
    bool IsFiltered;
    public async Task OpenOrder()
    {
        await DialogService.OpenSideAsync<CandidatesSearchPanel>("Candidate search filters", null,
         new SideDialogOptions
             {
                 CloseDialogOnOverlayClick = false,
                 Position = DialogPosition.Left,
                 ShowMask = true,
                 ShowTitle = true,
                 Height = "600px;",
                 Width = "400px;"
             });
    }

    private async Task OnLoadDataChanged(Tuple<bool, bool> args)
    {
        IsLoadDataChanged = args.Item1;
        IsFiltered = args.Item2;
        StateHasChanged();
    }
}


